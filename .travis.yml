env:
  global:
      - REPO_DIR="scikit-image"
      # Also see DAILY_COMMIT below
      - BUILD_COMMIT=master
      - PLAT=x86_64
      - UNICODE_WIDTH=32
      - NP_BUILD_DEP="numpy==1.14.5"
      - NP_TEST_DEP="numpy==1.14.5"
      - GEN_DEPS="matplotlib networkx scipy pillow"
      # Commit when running from daily branch
      - DAILY_COMMIT=master

language: python
# Default Python version is usually 2.7
python: 3.7
sudo: required
dist: bionic
services: docker

notifications:
  email:
    recipients:
      - jni.soma@fastmail.com

matrix:
  exclude:
      # Exclude the default Python 3.5 build
      - python: 3.5
  include:
    - os: linux
      arch: arm64-graviton2
      dist: focal
      virt: vm
      group: edge
      env:
        - MB_PYTHON_VERSION=3.6
        - MB_ML_VER=2014
        - PLAT=aarch64
        - DOCKER_TEST_IMAGE=multibuild/xenial_arm64v8
        - NP_BUILD_DEP="numpy==1.19.2"
        - NP_TEST_DEP="numpy==1.19.2"
    - os: linux
      arch: arm64-graviton2
      dist: focal
      virt: vm
      group: edge
      env:
        - MB_PYTHON_VERSION=3.7
        - MB_ML_VER=2014
        - PLAT=aarch64
        - DOCKER_TEST_IMAGE=multibuild/xenial_arm64v8
        - NP_BUILD_DEP="numpy==1.19.2"
        - NP_TEST_DEP="numpy==1.19.2"
    - os: linux
      arch: arm64-graviton2
      dist: focal
      virt: vm
      group: edge
      env:
        - MB_PYTHON_VERSION=3.8
        - MB_ML_VER=2014
        - PLAT=aarch64
        - DOCKER_TEST_IMAGE=multibuild/xenial_arm64v8
        - NP_BUILD_DEP="numpy==1.19.2"
        - NP_TEST_DEP="numpy==1.19.2"
  allow_failures:
    # Matplotlib is failing to release 32 bit wheels for linux.
    # This makes it difficult for us to compile.
    # https://github.com/MacPython/matplotlib-wheels/pull/9
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.8
        - PLAT=i686
        - NP_BUILD_DEP: "numpy==1.17.3"
        - NP_TEST_DEP: "numpy==1.17.3"

before_install:
    - if [ "$TRAVIS_BRANCH" == "master" ]; then
          BUILD_COMMIT=${DAILY_COMMIT:-$BUILD_COMMIT};
      fi
    # The devel branch seems necessary for python 3.8 on OSX
    - git clone --depth 1 --branch devel https://github.com/matthew-brett/multibuild.git
    - git clone --depth 1 --branch $BUILD_COMMIT https://github.com/scikit-image/scikit-image.git
    - BUILD_DEPENDS="$NP_BUILD_DEP Cython"
    - TEST_DEPENDS="$NP_TEST_DEP $GEN_DEPS -r $REPO_DIR/requirements/test.txt"
    - source multibuild/common_utils.sh
    - source multibuild/travis_steps.sh
    - before_install

install:
    # Maybe get and clean and patch source
    - clean_code $REPO_DIR $BUILD_COMMIT
    - build_wheel $REPO_DIR $PLAT

script:
    - install_run $PLAT

after_success:
    # Upload the generated wheel package to anaconda.org
    # SKIMAGE_STAGING_UPLOAD_TOKEN is an encrypted variable
    # used in Appveyor CI config, originally created at
    # multibuild-wheels-staging site
    - pip install git+https://github.com/Anaconda-Server/anaconda-client;
    - if [ "$TRAVIS_BRANCH" == "master" ]; then
          source extra_functions.sh;
          for f in wheelhouse/*.whl; do rename_wheel $f; done;
          ANACONDA_ORG="scipy-wheels-nightly";
          TOKEN=${SKIMAGE_NIGHTLY_UPLOAD_TOKEN};
      else
          ANACONDA_ORG="multibuild-wheels-staging";
          TOKEN=${SKIMAGE_STAGING_UPLOAD_TOKEN};
      fi
    - if [ -n "${TOKEN}" ] ; then
        anaconda -t ${TOKEN} upload -u ${ANACONDA_ORG} ${TRAVIS_BUILD_DIR}/wheelhouse/*.whl;
      fi
